/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../../common";
import type {
  TokenReceiverWithLSP1,
  TokenReceiverWithLSP1Interface,
} from "../../../../contracts/mocks/TokenReceiverLSP1.sol/TokenReceiverWithLSP1";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "typeId",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "receivedData",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "returnedValue",
        type: "bytes",
      },
    ],
    name: "UniversalReceiver",
    type: "event",
  },
  {
    stateMutability: "payable",
    type: "fallback",
  },
  {
    inputs: [],
    name: "fund",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "getBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "isValidSignature",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_bpunx",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "typeId",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "universalReceiver",
    outputs: [
      {
        internalType: "bytes",
        name: "returnValue",
        type: "bytes",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b506104b9806100206000396000f3fe6080604052600436106100565760003560e01c806301ffc9a71461005f57806312065fe0146100945780631626ba7e146100af57806340c10f19146100f25780636bb56a1414610105578063b60d42881461005d57005b3661005d57005b005b34801561006b57600080fd5b5061007f61007a36600461024c565b610125565b60405190151581526020015b60405180910390f35b3480156100a057600080fd5b5060405147815260200161008b565b3480156100bb57600080fd5b506100d96100ca36600461027d565b630b135d3f60e11b9392505050565b6040516001600160e01b0319909116815260200161008b565b61005d6101003660046102f8565b610177565b610118610113366004610346565b6101d7565b60405161008b9190610446565b60006001600160e01b03198216631aed5a8560e21b148061015657506001600160e01b031982166324871b3d60e01b145b8061017157506301ffc9a760e01b6001600160e01b03198316145b92915050565b60405163140e25ad60e31b8152600481018290526001600160a01b0383169063a0712d689034906024016000604051808303818588803b1580156101ba57600080fd5b505af11580156101ce573d6000803e3d6000fd5b50505050505050565b60608234336001600160a01b03167f9c3ba68eb5742b8e3961aea0afc7371a71bf433c8a67a831803b64c064a178c2856040516102149190610459565b60405180910390a4506040805180820190915260128152717468616e6b7320666f722063616c6c696e6760701b602082015292915050565b60006020828403121561025e57600080fd5b81356001600160e01b03198116811461027657600080fd5b9392505050565b60008060006040848603121561029257600080fd5b8335925060208401356001600160401b03808211156102b057600080fd5b818601915086601f8301126102c457600080fd5b8135818111156102d357600080fd5b8760208285010111156102e557600080fd5b6020830194508093505050509250925092565b6000806040838503121561030b57600080fd5b82356001600160a01b038116811461032257600080fd5b946020939093013593505050565b634e487b7160e01b600052604160045260246000fd5b6000806040838503121561035957600080fd5b8235915060208301356001600160401b038082111561037757600080fd5b818501915085601f83011261038b57600080fd5b81358181111561039d5761039d610330565b604051601f8201601f19908116603f011681019083821181831017156103c5576103c5610330565b816040528281528860208487010111156103de57600080fd5b8260208601602083013760006020848301015280955050505050509250929050565b6000815180845260005b818110156104265760208185018101518683018201520161040a565b506000602082860101526020601f19601f83011685010191505092915050565b6020815260006102766020830184610400565b60408152600061046c6040830184610400565b82810360209384015260008152919091019291505056fea26469706673582212202d460542deb49830bb13f504287a593a56a8a097024036dc36c138424a7c211964736f6c63430008180033";

type TokenReceiverWithLSP1ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TokenReceiverWithLSP1ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TokenReceiverWithLSP1__factory extends ContractFactory {
  constructor(...args: TokenReceiverWithLSP1ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      TokenReceiverWithLSP1 & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null
  ): TokenReceiverWithLSP1__factory {
    return super.connect(runner) as TokenReceiverWithLSP1__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TokenReceiverWithLSP1Interface {
    return new Interface(_abi) as TokenReceiverWithLSP1Interface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): TokenReceiverWithLSP1 {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as TokenReceiverWithLSP1;
  }
}
